<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>叶落</title>
  
  <subtitle>论美貌你是赢不过我的</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-09-10T03:20:36.613Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Nano</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何用Java连接微信公众号后台，获取接口，与token</title>
    <link href="http://yoursite.com/2019/09/10/%E5%A6%82%E4%BD%95%E7%94%A8Java%E8%BF%9E%E6%8E%A5%E5%BE%AE%E4%BF%A1%E5%85%AC%E4%BC%97%E5%8F%B7%E5%90%8E%E5%8F%B0%EF%BC%8C%E8%8E%B7%E5%8F%96%E6%8E%A5%E5%8F%A3%EF%BC%8C%E4%B8%8Etoken/"/>
    <id>http://yoursite.com/2019/09/10/如何用Java连接微信公众号后台，获取接口，与token/</id>
    <published>2019-09-10T02:50:02.000Z</published>
    <updated>2019-09-10T03:20:36.613Z</updated>
    
    <content type="html"><![CDATA[<h1 id="如何打开微信公众号开发者模式"><a href="#如何打开微信公众号开发者模式" class="headerlink" title="如何打开微信公众号开发者模式"></a>如何打开微信公众号开发者模式</h1><p>相信如果如果玩过公众号都知道，要打开公众号配置，需要一个服务器地址，不过大部分人玩它是用来搞测试的，所以我就介绍一个免费的用来反向代理的软件 <span class="exturl" data-url="aHR0cHM6Ly9uZ3Jvay5jb20v" title="https://ngrok.com/">ngork<i class="fa fa-external-link"></i></span>，用它你就可以将自己8080 端口暴露给外网，而且使用简单，只需要打开它然后输入<code>ngrok http 8080</code> 命令就行了</p><a id="more"></a><h1 id="java来写接入代码"><a href="#java来写接入代码" class="headerlink" title="java来写接入代码"></a>java来写接入代码</h1><p>这代码我是从网上看哔哩哔哩写的 如果，有兴趣可以直接哔哩哔哩 java微信公众号就能收到了，首先创建一个servlet，如下</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> WeiXinServlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.PrintWriter;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletInputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> Service.WxService;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class wxServlet</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@WebServlet</span>(<span class="string">"/wxServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">wxServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line">       </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@see</span> HttpServlet#HttpServlet()</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">wxServlet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>();</span><br><span class="line">        <span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span> HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">System.out.print(<span class="string">"--------------------------------------"</span>);</span><br><span class="line">String signature = request.getParameter(<span class="string">"signature"</span>);</span><br><span class="line">String timestamp = request.getParameter(<span class="string">"timestamp"</span>);</span><br><span class="line">String nonce = request.getParameter(<span class="string">"nonce"</span>);</span><br><span class="line">String echostr = request.getParameter(<span class="string">"echostr"</span>);</span><br><span class="line"><span class="comment">//较验证请求</span></span><br><span class="line"><span class="keyword">if</span>(WxService.check(timestamp,nonce,signature)) &#123;</span><br><span class="line">PrintWriter out = response.getWriter();</span><br><span class="line"><span class="comment">//原样返回echostr参数</span></span><br><span class="line">out.println(echostr);</span><br><span class="line">out.flush();</span><br><span class="line">out.close();</span><br><span class="line">System.out.println(<span class="string">"接入成功"</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"接入失败"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过get方法来接收传来的参数，因为微信公众号开发需要通过这三个参数，通过SHA1加密认证.</p><h2 id="再写个service来做SHA1加密认证"><a href="#再写个service来做SHA1加密认证" class="headerlink" title="再写个service来做SHA1加密认证"></a>再写个service来做SHA1加密认证</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.dom4j.Element;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.SAXReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysql.cj.Constants;</span><br><span class="line"><span class="keyword">import</span> com.mysql.cj.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.thoughtworks.xstream.XStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> entity.AccessToken;</span><br><span class="line"><span class="keyword">import</span> entity.Article;</span><br><span class="line"><span class="keyword">import</span> entity.BaseMessage;</span><br><span class="line"><span class="keyword">import</span> entity.ImageMessage;</span><br><span class="line"><span class="keyword">import</span> entity.MusicMessage;</span><br><span class="line"><span class="keyword">import</span> entity.NewsMessage;</span><br><span class="line"><span class="keyword">import</span> entity.TextMessage;</span><br><span class="line"><span class="keyword">import</span> entity.VideoMessage;</span><br><span class="line"><span class="keyword">import</span> entity.VoiceMessage;</span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSON;</span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> util.Utils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WxService</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String APPID = <span class="string">"wxf2a10b83349c22a3"</span>;</span><br><span class="line">    <span class="comment">//这个为你在配置页得到的自己的APPID</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String APPSECRET = <span class="string">"749b5f9f551d30723a7d20646749cddb"</span>;</span><br><span class="line">    <span class="comment">//这个为你在配置页得到的自己的APPSECRE </span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TOKEN = <span class="string">"abc"</span>;</span><br><span class="line">    <span class="comment">//这个为你在配置页提阿涅的TOKEN</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 验证签名</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">check</span><span class="params">(String timestamp,String nonce , String signature)</span> </span>&#123;</span><br><span class="line"><span class="comment">//1. 将token、timestamp、nonce三个蚕食进行字典序排序</span></span><br><span class="line">String[] strs = <span class="keyword">new</span> String[] &#123;TOKEN,timestamp,nonce&#125;;</span><br><span class="line">Arrays.sort(strs);</span><br><span class="line"><span class="comment">//2. 将三个参数字符串拼接成一个字符串进行sha1加密</span></span><br><span class="line">String str = strs[<span class="number">0</span>]+strs[<span class="number">1</span>]+strs[<span class="number">2</span>];</span><br><span class="line">String mysia = sha1(str);</span><br><span class="line">System.out.println(<span class="string">"到达check方法中！"</span>);</span><br><span class="line">System.out.println(mysia);</span><br><span class="line">System.out.println(signature);</span><br><span class="line"><span class="comment">//3. 开发者获得加密后的字符串与signature对比，标识该请求来源于微信</span></span><br><span class="line"><span class="keyword">return</span> mysia.equalsIgnoreCase(signature);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">sha1</span><span class="params">(String src)</span> </span>&#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//获取加密对象</span></span><br><span class="line">MessageDigest md = MessageDigest.getInstance(<span class="string">"sha1"</span>);</span><br><span class="line"><span class="comment">//加密</span></span><br><span class="line"><span class="keyword">byte</span>[] digest = md.digest(src.getBytes());</span><br><span class="line"><span class="keyword">char</span>[] chars = &#123;<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>&#125;;</span><br><span class="line">StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="comment">//处理加密结果</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">byte</span> b:digest) &#123;</span><br><span class="line">sb.append(chars[(b&gt;&gt;<span class="number">4</span>)&amp;<span class="number">15</span>]);</span><br><span class="line">sb.append(chars[b&amp;<span class="number">15</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> sb.toString();</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">System.out.println(<span class="string">"error:"</span>+e.getMessage());</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取signature</span></span><br><span class="line"><span class="comment">     * 特别注意的是调用微信js，url必须是当前页面(转发的不行)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> Exception </span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getSignature</span><span class="params">(String url)</span> <span class="keyword">throws</span> Exception</span>&#123;</span><br><span class="line"><span class="comment">//第三步:对密钥进行sha1加密</span></span><br><span class="line">    Map&lt;String, String&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    String ticket = getJsApiTicket();</span><br><span class="line"><span class="keyword">long</span> time = System.currentTimeMillis()/<span class="number">1000</span>;</span><br><span class="line">   String randomStr = <span class="string">"1485965214789631"</span>;</span><br><span class="line"> </span><br><span class="line">   String str = <span class="string">"jsapi_ticket="</span> + ticket + <span class="string">"&amp;noncestr="</span> + randomStr+ <span class="string">"&amp;timestamp="</span> + time + <span class="string">"&amp;url="</span>+url;</span><br><span class="line"> </span><br><span class="line"> String signature = <span class="string">""</span>;</span><br><span class="line">  <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            MessageDigest crypt = MessageDigest.getInstance(<span class="string">"SHA-1"</span>);</span><br><span class="line">            crypt.reset();</span><br><span class="line">            crypt.update(str.getBytes(<span class="string">"UTF-8"</span>)); <span class="comment">//对string1 字符串进行SHA-1加密处理</span></span><br><span class="line">            signature = byteToHex(crypt.digest());  <span class="comment">//对加密后字符串转成16进制</span></span><br><span class="line"><span class="comment">//  signature = sha1(str);</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> Exception(<span class="string">"signature生成失败!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">  map.put(<span class="string">"timeStamp"</span>, String.valueOf(time));</span><br><span class="line">  map.put(<span class="string">"randomStr"</span>, randomStr);</span><br><span class="line">  map.put(<span class="string">"signature"</span>, signature);</span><br><span class="line">  System.out.println(<span class="string">"ticket:"</span>+ticket+<span class="string">",result:"</span>+com.alibaba.fastjson.JSONObject.toJSONString(map));</span><br><span class="line">  <span class="keyword">return</span> com.alibaba.fastjson.JSON.toJSONString(map);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> String <span class="title">byteToHex</span><span class="params">(<span class="keyword">final</span> <span class="keyword">byte</span>[] hash)</span> </span>&#123;</span><br><span class="line">        Formatter formatter = <span class="keyword">new</span> Formatter();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">byte</span> b : hash) &#123;</span><br><span class="line">            formatter.format(<span class="string">"%02x"</span>, b);</span><br><span class="line">        &#125;</span><br><span class="line">        String result = formatter.toString();</span><br><span class="line">        formatter.close();</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然后再接口配置信息填写ngrok改的URL 再点击确认 就可以了，这期间需要点时间等候</p><h1 id="用java写获取token的方法"><a href="#用java写获取token的方法" class="headerlink" title="用java写获取token的方法"></a>用java写获取token的方法</h1><p>因为微信公众号大部分功能需要获取token才能搞的，所以这里写下方法</p><h2 id="创建个AccessToken的实体类"><a href="#创建个AccessToken的实体类" class="headerlink" title="创建个AccessToken的实体类"></a>创建个AccessToken的实体类</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.whale.weixin.entity;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 保存Token（只有俩个小时的时限）</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">AccessToken</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> String accessToken;</span><br><span class="line"><span class="comment">//计算过期时间</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">long</span> expireTime;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getAccessToken</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> accessToken;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setAccessToken</span><span class="params">(String accessToken)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.accessToken = accessToken;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">long</span> <span class="title">getExpireTime</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> expireTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setExpireTime</span><span class="params">(<span class="keyword">long</span> expireTime)</span> </span>&#123;</span><br><span class="line"><span class="keyword">this</span>.expireTime = expireTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">AccessToken</span><span class="params">(String accessToken, String expireIn)</span> </span>&#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line"><span class="keyword">this</span>.accessToken = accessToken;</span><br><span class="line"><span class="keyword">this</span>.expireTime = System.currentTimeMillis()+Integer.parseInt(expireIn)*<span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断token是否过期</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isExpired</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="keyword">return</span> System.currentTimeMillis()&gt;expireTime;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="创建个工具类来发get与post-请求"><a href="#创建个工具类来发get与post-请求" class="headerlink" title="创建个工具类来发get与post 请求"></a>创建个工具类来发get与post 请求</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> org.whale.weixin.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.net.URLConnection;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Util</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 用于存储token</span></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向指定的地址发送get请求 用于获取微信Token</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">get</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URL urlObj = <span class="keyword">new</span> URL(url);</span><br><span class="line">            <span class="comment">// 开链接</span></span><br><span class="line">            URLConnection connection = urlObj.openConnection();</span><br><span class="line">            InputStream is = connection.getInputStream();</span><br><span class="line">            <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">while</span> ((len = is.read(b)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                sb.append(<span class="keyword">new</span> String(b, <span class="number">0</span>, len));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sb.toString();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向指定地址发送一个post请求，待着data数据</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> url</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> data</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">post</span><span class="params">(String url, String data)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            URL urlObject = <span class="keyword">new</span> URL(url);</span><br><span class="line">            URLConnection connection = urlObject.openConnection();</span><br><span class="line">            <span class="comment">// 要发鸿数据出去，必须要发送可发送数据状态</span></span><br><span class="line">            connection.setDoOutput(<span class="keyword">true</span>);</span><br><span class="line">            <span class="comment">// 获取输出流</span></span><br><span class="line">            OutputStream os = connection.getOutputStream();</span><br><span class="line">            <span class="comment">// 写出数据</span></span><br><span class="line">            os.write(data.getBytes());</span><br><span class="line">            os.close();</span><br><span class="line">            <span class="comment">// 获取输入流</span></span><br><span class="line">            InputStream is = connection.getInputStream();</span><br><span class="line">            <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">while</span> ((len = is.read(b)) != -<span class="number">1</span>) &#123;</span><br><span class="line">                sb.append(<span class="keyword">new</span> String(b, <span class="number">0</span>, len));</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> sb.toString();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="comment">// <span class="doctag">TODO:</span> handle exception</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="在service中编写获取token的方法"><a href="#在service中编写获取token的方法" class="headerlink" title="在service中编写获取token的方法"></a>在service中编写获取token的方法</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> Service;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.UnsupportedEncodingException;</span><br><span class="line"><span class="keyword">import</span> java.security.MessageDigest;</span><br><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.dom4j.Element;</span><br><span class="line"><span class="keyword">import</span> org.dom4j.io.SAXReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.mysql.cj.Constants;</span><br><span class="line"><span class="keyword">import</span> com.mysql.cj.util.StringUtils;</span><br><span class="line"><span class="keyword">import</span> com.thoughtworks.xstream.XStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> entity.AccessToken;</span><br><span class="line"><span class="keyword">import</span> entity.Article;</span><br><span class="line"><span class="keyword">import</span> entity.BaseMessage;</span><br><span class="line"><span class="keyword">import</span> entity.ImageMessage;</span><br><span class="line"><span class="keyword">import</span> entity.MusicMessage;</span><br><span class="line"><span class="keyword">import</span> entity.NewsMessage;</span><br><span class="line"><span class="keyword">import</span> entity.TextMessage;</span><br><span class="line"><span class="keyword">import</span> entity.VideoMessage;</span><br><span class="line"><span class="keyword">import</span> entity.VoiceMessage;</span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSON;</span><br><span class="line"><span class="keyword">import</span> net.sf.json.JSONObject;</span><br><span class="line"><span class="keyword">import</span> util.Utils;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WxService</span> </span>&#123;</span><br><span class="line">      <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String GET_TOKENURL_URL = <span class="string">"https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&amp;appid=APPID&amp;secret=APPSECRET"</span>;</span><br><span class="line">    <span class="comment">//用于存储token</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> AccessToken at;</span><br><span class="line">     </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取token</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">getToken</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    String url = GET_TOKENURL_URL.replace(<span class="string">"APPID"</span>, APPID).replace(<span class="string">"APPSECRET"</span>, APPSECRET);</span><br><span class="line">    String tokenStr = Utils.get(url);</span><br><span class="line"><span class="comment">//    System.out.println(tokenStr);</span></span><br><span class="line">    JSONObject jsonObject = JSONObject.fromObject(tokenStr);</span><br><span class="line">    String token = jsonObject.getString(<span class="string">"access_token"</span>);</span><br><span class="line">    String expireIn = jsonObject.getString(<span class="string">"expires_in"</span>);</span><br><span class="line">    <span class="comment">//创建token对象，并存起来。</span></span><br><span class="line">    at = <span class="keyword">new</span> AccessToken(token, expireIn);</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 向外暴露的获取token的方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getAccessToken</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">null</span>==at||at.isExpired()) &#123;</span><br><span class="line">    getToken();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> at.getAccessToken();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>以上便是简易的java来写微信后台的代码，由于大部分代码我是通过看别人视频获得的，所以也不详细写了，有兴趣的话可以去<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL2F2MzUwNDIyOTgvP3A9MTcmdD0zMDk=" title="https://www.bilibili.com/video/av35042298/?p=17&t=309">bilibli<i class="fa fa-external-link"></i></span>上搜索看看</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;如何打开微信公众号开发者模式&quot;&gt;&lt;a href=&quot;#如何打开微信公众号开发者模式&quot; class=&quot;headerlink&quot; title=&quot;如何打开微信公众号开发者模式&quot;&gt;&lt;/a&gt;如何打开微信公众号开发者模式&lt;/h1&gt;&lt;p&gt;相信如果如果玩过公众号都知道，要打开公众号配置，需要一个服务器地址，不过大部分人玩它是用来搞测试的，所以我就介绍一个免费的用来反向代理的软件 &lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9uZ3Jvay5jb20v&quot; title=&quot;https://ngrok.com/&quot;&gt;ngork&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;，用它你就可以将自己8080 端口暴露给外网，而且使用简单，只需要打开它然后输入&lt;code&gt;ngrok http 8080&lt;/code&gt; 命令就行了&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="微信" scheme="http://yoursite.com/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>如何用springboot快速建立helloworld项目</title>
    <link href="http://yoursite.com/2019/09/03/%E5%A6%82%E4%BD%95%E7%94%A8springboot%E5%BF%AB%E9%80%9F%E5%BB%BA%E7%AB%8Bhelloworld%E9%A1%B9%E7%9B%AE/"/>
    <id>http://yoursite.com/2019/09/03/如何用springboot快速建立helloworld项目/</id>
    <published>2019-09-03T05:36:53.000Z</published>
    <updated>2019-09-03T05:59:49.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是springboot"><a href="#什么是springboot" class="headerlink" title="什么是springboot"></a>什么是springboot</h1><p>springboot是一个spring微服务框架，具体是什么，大家可以去<span class="exturl" data-url="aHR0cHM6Ly9zcHJpbmcuaW8v" title="https://spring.io/">spring官网<i class="fa fa-external-link"></i></span>上进行了解</p><h1 id="如何快速的创建helloworld项目"><a href="#如何快速的创建helloworld项目" class="headerlink" title="如何快速的创建helloworld项目"></a>如何快速的创建helloworld项目</h1><h2 id="通过springboot快速构建网站创建maven项目"><a href="#通过springboot快速构建网站创建maven项目" class="headerlink" title="通过springboot快速构建网站创建maven项目"></a>通过springboot快速构建网站创建maven项目</h2><p>进入<span class="exturl" data-url="aHR0cHM6Ly9zdGFydC5zcHJpbmcuaW8v" title="https://start.spring.io/">springboot快速建立网站<i class="fa fa-external-link"></i></span>，Project选择Maven Project，SpringBoot版本选择2.1.7，我写这篇的时候，2.1.7为稳定版，请大家自行选择当前稳定版，如不知道可以去<span class="exturl" data-url="aHR0cHM6Ly9zcHJpbmcuaW8vcHJvamVjdHMvc3ByaW5nLWJvb3QjbGVhcm4=" title="https://spring.io/projects/spring-boot#learn">springboot指南<i class="fa fa-external-link"></i></span>中去看，看见红色GA结尾的就是稳定版，然后选择依赖，也就是Dependencies，这里我们只选择Web中的SpringWebStarter。</p><a id="more"></a><h2 id="创建helloworld"><a href="#创建helloworld" class="headerlink" title="创建helloworld"></a>创建helloworld</h2><p>将刚刚创建出来的maven项目解压缩，并导入项目，修改主目录自动生成的Application.java中的代码如下 </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestApplication</span> </span>&#123;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function">String <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello World!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">SpringApplication.run(TestApplication.class, args);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后右键项目-&gt;Run as-&gt;Spring Boot App</p><p>进入localhost:8080下就能看到helloworld了</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;什么是springboot&quot;&gt;&lt;a href=&quot;#什么是springboot&quot; class=&quot;headerlink&quot; title=&quot;什么是springboot&quot;&gt;&lt;/a&gt;什么是springboot&lt;/h1&gt;&lt;p&gt;springboot是一个spring微服务框架，具体是什么，大家可以去&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9zcHJpbmcuaW8v&quot; title=&quot;https://spring.io/&quot;&gt;spring官网&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;上进行了解&lt;/p&gt;&lt;h1 id=&quot;如何快速的创建helloworld项目&quot;&gt;&lt;a href=&quot;#如何快速的创建helloworld项目&quot; class=&quot;headerlink&quot; title=&quot;如何快速的创建helloworld项目&quot;&gt;&lt;/a&gt;如何快速的创建helloworld项目&lt;/h1&gt;&lt;h2 id=&quot;通过springboot快速构建网站创建maven项目&quot;&gt;&lt;a href=&quot;#通过springboot快速构建网站创建maven项目&quot; class=&quot;headerlink&quot; title=&quot;通过springboot快速构建网站创建maven项目&quot;&gt;&lt;/a&gt;通过springboot快速构建网站创建maven项目&lt;/h2&gt;&lt;p&gt;进入&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9zdGFydC5zcHJpbmcuaW8v&quot; title=&quot;https://start.spring.io/&quot;&gt;springboot快速建立网站&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;，Project选择Maven Project，SpringBoot版本选择2.1.7，我写这篇的时候，2.1.7为稳定版，请大家自行选择当前稳定版，如不知道可以去&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9zcHJpbmcuaW8vcHJvamVjdHMvc3ByaW5nLWJvb3QjbGVhcm4=&quot; title=&quot;https://spring.io/projects/spring-boot#learn&quot;&gt;springboot指南&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;中去看，看见红色GA结尾的就是稳定版，然后选择依赖，也就是Dependencies，这里我们只选择Web中的SpringWebStarter。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="spring" scheme="http://yoursite.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>如何用maven快速建立个web工程</title>
    <link href="http://yoursite.com/2019/08/30/%E5%A6%82%E4%BD%95%E7%94%A8maven%E5%BF%AB%E9%80%9F%E5%BB%BA%E7%AB%8B%E4%B8%AAweb%E5%B7%A5%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/08/30/如何用maven快速建立个web工程/</id>
    <published>2019-08-30T02:48:32.000Z</published>
    <updated>2019-09-03T02:22:38.134Z</updated>
    
    <content type="html"><![CDATA[<p>最近闲来无事天天看视频，发现自己以前用maven建工程方式貌似有点瓜皮，所以写个文章在记录，也方便工作学习</p><h1 id="什么是maven工程"><a href="#什么是maven工程" class="headerlink" title="什么是maven工程"></a>什么是maven工程</h1><p>maven是一个很方便构建项目的工具，有了它就可以不用到处找jar包了，而且现在越来越多的技术，貌似都是直接用maven导入的所以，我觉得还是需要搞的，而它中配置jar的地方主要是在pom.xml中写，而如果你想找要加什么东西进去，可以去<span class="exturl" data-url="aHR0cHM6Ly9tdm5yZXBvc2l0b3J5LmNvbS8=" title="https://mvnrepository.com/">maven市场<i class="fa fa-external-link"></i></span>中寻找。</p><a id="more"></a><h1 id="如何配置maven环境"><a href="#如何配置maven环境" class="headerlink" title="如何配置maven环境"></a>如何配置maven环境</h1><p>maven是一个java搞的东西，所以你要<span class="exturl" data-url="aHR0cHM6Ly9qaW5neWFuLmJhaWR1LmNvbS9hcnRpY2xlLzg3MGM2ZmMzNzNhYWNiYjAzZmU0YmVhOC5odG1s" title="https://jingyan.baidu.com/article/870c6fc373aacbb03fe4bea8.html">配置java环境<i class="fa fa-external-link"></i></span>，不过我觉得这个东西大家估计都会就不说了，然后是<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vbGl1aG9uZ2ZlbmcvcC81MDU3ODI3Lmh0bWw=" title="https://www.cnblogs.com/liuhongfeng/p/5057827.html">配置maven的环境<i class="fa fa-external-link"></i></span>，感觉和配置java一样简单，所以也不说了</p><h1 id="如何配置maven为阿里私服"><a href="#如何配置maven为阿里私服" class="headerlink" title="如何配置maven为阿里私服"></a>如何配置maven为阿里私服</h1><p>由于默认maven服务器下载起来很慢，所以一般国内我还是推荐修改为阿里的私服，这样会快点，修改文件为maven解压路径下conf目录下的setting文件，需要在mirrors节点加入</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>nexus-aliyun<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>*<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>Nexus aliyun<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/groups/public<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如下图所示<br><img src="https://i.imgur.com/YNJ4mPs.png" alt></p><h1 id="如何在eclipse中配置maven环境"><a href="#如何在eclipse中配置maven环境" class="headerlink" title="如何在eclipse中配置maven环境"></a>如何在eclipse中配置maven环境</h1><p>点击window-&gt;preferences-&gt;maven<br>这里需要修改的配置有两个地方，一个在Installations，一个在User Settings中，<br><img src="https://i.imgur.com/9RgF9nu.png" alt><br><img src="https://i.imgur.com/qE3IjrI.png" alt></p><h1 id="如何用eclipse快速建立maven的web工程"><a href="#如何用eclipse快速建立maven的web工程" class="headerlink" title="如何用eclipse快速建立maven的web工程"></a>如何用eclipse快速建立maven的web工程</h1><p>点击 File-&gt;New-&gt;Maven Project，然后弹出页面记得勾选Create a simple project 的选项，操作如下图<br><img src="https://i.imgur.com/7qw2dgD.png" alt>然后点击finish，就创建好了项目，这时候你发现很坑爹怎么没有WEB-INF与META-INF目录，<br>没事你只要右击项目选择properties-&gt;Project Facets，然后勾选掉Dynamic Web Module 点击Apply，再点击 Dynamic Web Module ，<br>就出现了 Futher configuration available… 的字眼，点击它 然后点击OK，一个Maven项目的web目录就搭建好了</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近闲来无事天天看视频，发现自己以前用maven建工程方式貌似有点瓜皮，所以写个文章在记录，也方便工作学习&lt;/p&gt;&lt;h1 id=&quot;什么是maven工程&quot;&gt;&lt;a href=&quot;#什么是maven工程&quot; class=&quot;headerlink&quot; title=&quot;什么是maven工程&quot;&gt;&lt;/a&gt;什么是maven工程&lt;/h1&gt;&lt;p&gt;maven是一个很方便构建项目的工具，有了它就可以不用到处找jar包了，而且现在越来越多的技术，貌似都是直接用maven导入的所以，我觉得还是需要搞的，而它中配置jar的地方主要是在pom.xml中写，而如果你想找要加什么东西进去，可以去&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9tdm5yZXBvc2l0b3J5LmNvbS8=&quot; title=&quot;https://mvnrepository.com/&quot;&gt;maven市场&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;中寻找。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="maven" scheme="http://yoursite.com/tags/maven/"/>
    
  </entry>
  
  <entry>
    <title>First</title>
    <link href="http://yoursite.com/2019/08/29/First/"/>
    <id>http://yoursite.com/2019/08/29/First/</id>
    <published>2019-08-29T02:50:45.000Z</published>
    <updated>2019-08-30T06:32:37.318Z</updated>
    
    <content type="html"><![CDATA[<p>之前搞的博客，发现上传方式很难受，后来我又看了下<span class="exturl" data-url="aHR0cHM6Ly9iaW5ncWlhbmd6aG91LmdpdGh1Yi5pby8yMDE5LzA4LzEzLzIwMTktOC0xMy1ob3ctdG8tc2V0LWdpdGh1Yi1pby11c2UtaGV4by13aXRoLW5leHQtbWQv" title="https://bingqiangzhou.github.io/2019/08/13/2019-8-13-how-to-set-github-io-use-hexo-with-next-md/">炳强的博客<i class="fa fa-external-link"></i></span>后，又开始重新搞了个</p><p>欢迎大家去看他写的，很详细，基本上把next主题翻译了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;之前搞的博客，发现上传方式很难受，后来我又看了下&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly9iaW5ncWlhbmd6aG91LmdpdGh1Yi5pby8yMDE5LzA4LzEzLzIwMTktOC0xMy1ob3ctdG8tc2
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
      <category term="github" scheme="http://yoursite.com/categories/java/github/"/>
    
      <category term="next" scheme="http://yoursite.com/categories/java/github/next/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
      <category term="github" scheme="http://yoursite.com/tags/github/"/>
    
      <category term="next" scheme="http://yoursite.com/tags/next/"/>
    
  </entry>
  
</feed>
